version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    volumes:
      - zookeeper-data:/data
    networks:
      - service

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    command: sh -c "rm -f ./kafka/logs/meta.properties && start-kafka.sh"
    restart: always
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs/
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/kafka:/kafka
    depends_on:
      - zookeeper
    networks:
      - service

  db:
    image: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydatabase
      TZ: America/Vancouver
    volumes:
      - ./data/database:/var/lib/mysql
    networks:
      - service

  storage:
    restart: always
    build:
      context: storage
      dockerfile: Dockerfile
    # Remove public port exposure
    depends_on:
      - db
      - kafka
      - receiver
    volumes:
      - ./config/storage:/app/config/storage
      - ./logs/storage:/app/logs/storage
    networks:
      - service
    environment:
      - TZ=America/Vancouver
      - CORS_ALLOW_ALL=no

  receiver:
    deploy:
      replicas: 3
    restart: always
    build:
      context: receiver
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - ./config/receiver:/app/config/receiver
      - ./logs/receiver:/app/logs/receiver
    networks:
      - service
    environment:
      - TZ=America/Vancouver
      - CORS_ALLOW_ALL=no

  processing:
    restart: always
    build:
      context: processing
      dockerfile: Dockerfile
    # Remove public port exposure
    depends_on:
      - storage
    volumes:
      - ./config/processing:/app/config/processing
      - ./logs/processing:/app/logs/processing
      - ./data/processing:/app/data/processing
    networks:
      - service
    environment:
      - TZ=America/Vancouver
      - CORS_ALLOW_ALL=no

  analyzer:
    restart: always
    build:
      context: analyzer
      dockerfile: Dockerfile
    # Remove public port exposure
    depends_on:
      - processing
    volumes:
      - ./config/analyzer:/app/config/analyzer
      - ./logs/analyzer:/app/logs/analyzer
    networks:
      - service
    environment:
      - TZ=America/Vancouver
      - CORS_ALLOW_ALL=no

  dashboard:
    build:
      context: dashboard
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - receiver
      - storage
      - processing
      - analyzer
    volumes:
      - ${PWD}/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./dashboard:/usr/share/nginx/html
    networks:
      - service

volumes:
  my-db:
  zookeeper-data:
  data-kafka:

networks:
  service:
    driver: bridge
